class Parent is subclass of Feature
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
			private orParent: bool;
			private xorParent: bool;
			inv not (orParent and xorParent);
operations
			public Parent: string * bool ==> Parent
			Parent(n, m) == (name := n; mandatory := m; return self;)
			post mandatory = m and name = n;
			public setXor: () ==> ()
			setXor() == xorParent := true;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Parent