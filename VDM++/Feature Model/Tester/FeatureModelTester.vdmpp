class FeatureModelTester
instance variables
			root : Parent := new Parent("E-Shop");
			catalogue : Feature := new Feature("Catalogue");
			payment : Parent := new Parent("Payment");
			security : Parent := new Parent("Security");
			search : Feature := new Feature("Search");
			bankTransfer : Feature := new Feature("Bank Transfer");
			creditCard : Feature := new Feature("CreditCard");
			high : Feature := new Feature("High");
			standard : Feature := new Feature("Standard");
			model : Model := new Model(root);
operations
			private assertTrue: bool ==> ()
                assertTrue(cond) == return
                pre cond;
      private assertFalse: bool ==> ()
                assertFalse(cond) == return
                pre not cond;
                
			private createFeatureModel: () ==> ()
                createFeatureModel() ==
                (
                			payment.setOrParent();
                			payment.setSubFeatures([bankTransfer, creditCard]);
                			security.setXorParent();
                			security.setSubFeatures([high, standard]);
                			root.setSubFeatures(
                			[catalogue, payment, security, search]
                			);
                			assertTrue(root.subFeaturesLen() = 4);
                			assertTrue(payment.subFeaturesLen() = 2);
                			assertTrue(security.subFeaturesLen() = 2);
                			assertTrue(model.nodeCount() = 9);
                );
      public static main: () ==> ()
                main() ==
                (	
                				dcl tester : FeatureModelTester := new FeatureModelTester();
                        tester.createFeatureModel();
                        
                );
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end FeatureModelTester